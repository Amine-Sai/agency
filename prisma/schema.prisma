datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Employee {
  id       Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  services  Service[]  @relation("ServiceEmployees")
  role String @default("employee")
  joinDate  DateTime @default(now())
}

model User {
  id       Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  requests  Request[]
  messages  Message[] @ignore 
  role String @default("user")
  joinDate  DateTime @default(now())
}

model Service {
  id        Int      @id @default(autoincrement())
  title        String @unique
  price         Float
  description  String?
  team        Employee[] @relation("ServiceEmployees")
  requests    Request[] @ignore
}

model Request {
  id       Int      @id @default(autoincrement())
  service   Service  @relation(fields: [serviceID], references: [id], onDelete: Cascade)
  serviceID Int
  user      User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID    Int
  chat      Chat?    @relation
  body      String?
  status    String
  date      DateTime @default(now())
}

model Chat {
  id        Int      @id @default(autoincrement())
  request   Request  @relation(fields: [requestID], references: [id], onDelete: Cascade)
  requestID Int      @unique
  messages  Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Message {
  id        Int      @id @default(autoincrement())
  chat Chat @relation(fields: [chatID], references: [id], onDelete: Cascade)
  chatID    Int 
  user User @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID    Int 
  content   String
  role String @default("user")
  createdAt DateTime @default(now())
}